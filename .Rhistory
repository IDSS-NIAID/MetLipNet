#' library(ggraph)
#' sample_data <- data.frame(
#'   Window = rep(1:3, each = 5),
#'   mz1 = runif(15, 100, 500),
#'   mz2 = runif(15, 100, 500),
#'   molecule_match = sample(c("A", "B", "C"), 15, replace = TRUE)
#' )
#' net_viz(sample_data)
#'
#' @export
net_viz <- function(data, output_xlsx = "network_data.xlsx", output_dir = "network_plots") {
dir.create(output_dir, showWarnings = FALSE)
wb <- createWorkbook()
unique_windows <- unique(data$Window)
for (window in unique_windows) {
window_data <- filter(data, Window == window)
# Save network data to Excel
addWorksheet(wb, paste0("RT_Window_", window))
writeData(wb, sheet = paste0("RT_Window_", window), window_data)
# Prepare data for graph
graph_data <- data.frame(from = round(window_data$mz1, 0), to = round(window_data$mz2, 0), edge_color = window_data$molecule_match)
g <- graph_from_data_frame(graph_data, directed = TRUE)
# Optimize layout for each window
best_layout <- optimize_network_layout(g)
plot_title <- paste("Network for RT Window", window)
p <- ggraph(g, layout = best_layout) +
geom_edge_link(aes(color = edge_color), alpha = 0.8) +
geom_node_point(size = 5, color = "black") +
geom_node_text(aes(label = name), repel = TRUE) +
scale_color_brewer(palette = "Dark2")+
ggtitle(plot_title)+
theme(
# Set legend background to transparent with no border
legend.background = element_rect(fill = "transparent", colour = NA),
# Customize plot title
plot.title = element_text(hjust = 0.5, size = 18, color = 'black'),
# Customize appearance of x-axis text
axis.text.x = element_blank(),
# Customize appearance of y-axis text
axis.text.y = element_blank(),
# Customize axis ticks appearance
axis.ticks = element_blank(),
# Set plot background to transparent with no border
plot.background = element_rect(fill = "transparent", colour = NA),
# Customize the background of the panel (plot area)
panel.background = element_rect(fill = 'white'),
# Customize panel border
panel.border = element_rect(colour = "black", fill=NA, size = 0.5),
# Remove major gridlines
panel.grid.major = element_blank(),
# Remove minor gridlines
panel.grid.minor = element_blank()
)
plot(p)
# Save plot as JPEG
ggsave(filename = file.path(output_dir, paste0("network_RT_Window_", window, ".jpeg")), plot = p, width = 30, height = 20)
}
openxlsx::saveWorkbook(wb, output_xlsx, overwrite = TRUE)
}
net_viz(df_mz_differences_filtered)
warnings()
library(RColorBrewer)
net_viz(df_mz_differences_filtered)
p <- ggraph(g, layout = best_layout) +
geom_edge_link(aes(color = factor(edge_color)), alpha = 0.8) +
geom_node_point(size = 5, color = "black") +
geom_node_text(aes(label = name), repel = TRUE) +
scale_edge_color_brewer(palette = "Dark2")+
ggtitle(plot_title)+
theme(
# Set legend background to transparent with no border
legend.background = element_rect(fill = "transparent", colour = NA),
# Customize plot title
plot.title = element_text(hjust = 0.5, size = 24, color = 'black'),
# Customize appearance of x-axis text
axis.text.x = element_blank(),
# Customize appearance of y-axis text
axis.text.y = element_blank(),
# Customize axis ticks appearance
axis.ticks = element_blank(),
# Set plot background to transparent with no border
plot.background = element_rect(fill = "transparent", colour = NA),
# Customize the background of the panel (plot area)
panel.background = element_rect(fill = 'white'),
# Customize panel border
panel.border = element_rect(colour = "black", fill=NA, size = 0.5),
# Remove major gridlines
panel.grid.major = element_blank(),
# Remove minor gridlines
panel.grid.minor = element_blank()
)
plot(p)
for (window in unique_windows) {
window_data <- filter(data, Window == window)
# Save network data to Excel
addWorksheet(wb, paste0("RT_Window_", window))
writeData(wb, sheet = paste0("RT_Window_", window), window_data)
# Prepare data for graph
graph_data <- data.frame(from = round(window_data$mz1, 0), to = round(window_data$mz2, 0), edge_color = window_data$molecule_match)
g <- graph_from_data_frame(graph_data, directed = TRUE)
# Optimize layout for each window
best_layout <- optimize_network_layout(g)
plot_title <- paste("Network for RT Window", window)
p <- ggraph(g, layout = best_layout) +
geom_edge_link(aes(color = factor(edge_color)), alpha = 0.8) +
geom_node_point(size = 5, color = "black") +
geom_node_text(aes(label = name), repel = TRUE) +
scale_edge_color_brewer(palette = "Dark2")+
ggtitle(plot_title)+
theme(
# Set legend background to transparent with no border
legend.background = element_rect(fill = "transparent", colour = NA),
# Customize plot title
plot.title = element_text(hjust = 0.5, size = 24, color = 'black'),
# Customize appearance of x-axis text
axis.text.x = element_blank(),
# Customize appearance of y-axis text
axis.text.y = element_blank(),
# Customize axis ticks appearance
axis.ticks = element_blank(),
# Set plot background to transparent with no border
plot.background = element_rect(fill = "transparent", colour = NA),
# Customize the background of the panel (plot area)
panel.background = element_rect(fill = 'white'),
# Customize panel border
panel.border = element_rect(colour = "black", fill=NA, size = 0.5),
# Remove major gridlines
panel.grid.major = element_blank(),
# Remove minor gridlines
panel.grid.minor = element_blank()
)
plot(p)
# Save plot as JPEG
ggsave(filename = file.path(output_dir, paste0("network_RT_Window_", window, ".jpeg")), plot = p, width = 30, height = 20)
}
#' library(ggraph)
#' sample_data <- data.frame(
#'   Window = rep(1:3, each = 5),
#'   mz1 = runif(15, 100, 500),
#'   mz2 = runif(15, 100, 500),
#'   molecule_match = sample(c("A", "B", "C"), 15, replace = TRUE)
#' )
#' net_viz(sample_data)
#'
#' @export
net_viz <- function(data, output_xlsx = "network_data.xlsx", output_dir = "network_plots") {
dir.create(output_dir, showWarnings = FALSE)
wb <- createWorkbook()
unique_windows <- unique(data$Window)
for (window in unique_windows) {
window_data <- filter(data, Window == window)
# Save network data to Excel
addWorksheet(wb, paste0("RT_Window_", window))
writeData(wb, sheet = paste0("RT_Window_", window), window_data)
# Prepare data for graph
graph_data <- data.frame(from = round(window_data$mz1, 0), to = round(window_data$mz2, 0), edge_color = window_data$molecule_match)
g <- graph_from_data_frame(graph_data, directed = TRUE)
# Optimize layout for each window
best_layout <- optimize_network_layout(g)
plot_title <- paste("Network for RT Window", window)
p <- ggraph(g, layout = best_layout) +
geom_edge_link(aes(color = factor(edge_color)), alpha = 0.8) +
geom_node_point(size = 5, color = "black") +
geom_node_text(aes(label = name), repel = TRUE) +
scale_edge_color_brewer(palette = "Dark2")+
ggtitle(plot_title)+
theme(
# Set legend background to transparent with no border
legend.background = element_rect(fill = "transparent", colour = NA),
# Customize plot title
plot.title = element_text(hjust = 0.5, size = 24, color = 'black'),
# Customize appearance of x-axis text
axis.text.x = element_blank(),
# Customize appearance of y-axis text
axis.text.y = element_blank(),
# Customize axis ticks appearance
axis.ticks = element_blank(),
# Set plot background to transparent with no border
plot.background = element_rect(fill = "transparent", colour = NA),
# Customize the background of the panel (plot area)
panel.background = element_rect(fill = 'white'),
# Customize panel border
panel.border = element_rect(colour = "black", fill=NA, size = 0.5),
# Remove major gridlines
panel.grid.major = element_blank(),
# Remove minor gridlines
panel.grid.minor = element_blank()
)
plot(p)
# Save plot as JPEG
ggsave(filename = file.path(output_dir, paste0("network_RT_Window_", window, ".jpeg")), plot = p, width = 30, height = 20)
}
openxlsx::saveWorkbook(wb, output_xlsx, overwrite = TRUE)
}
net_viz(df_mz_differences_filtered)
#' library(ggraph)
#' sample_data <- data.frame(
#'   Window = rep(1:3, each = 5),
#'   mz1 = runif(15, 100, 500),
#'   mz2 = runif(15, 100, 500),
#'   molecule_match = sample(c("A", "B", "C"), 15, replace = TRUE)
#' )
#' net_viz(sample_data)
#'
#' @export
net_viz <- function(data, output_xlsx = "network_data.xlsx", output_dir = "network_plots") {
dir.create(output_dir, showWarnings = FALSE)
wb <- createWorkbook()
unique_windows <- unique(data$Window)
for (window in unique_windows) {
window_data <- filter(data, Window == window)
# Save network data to Excel
addWorksheet(wb, paste0("RT_Window_", window))
writeData(wb, sheet = paste0("RT_Window_", window), window_data)
# Prepare data for graph
graph_data <- data.frame(from = round(window_data$mz1, 0), to = round(window_data$mz2, 0), edge_color = window_data$molecule_match)
g <- graph_from_data_frame(graph_data, directed = TRUE)
# Optimize layout for each window
best_layout <- optimize_network_layout(g)
plot_title <- paste("Network for RT Window", window)
p <- ggraph(g, layout = best_layout) +
geom_edge_link(aes(color = factor(edge_color)), alpha = 0.8) +
geom_node_point(size = 5, color = "black") +
geom_node_text(aes(label = name), repel = TRUE) +
scale_edge_color_brewer(palette = "Dark2")+
ggtitle(plot_title)+
theme(
# Set legend background to transparent with no border
legend.background = element_rect(fill = "transparent", colour = NA),
# Customize appearance of legend title
legend.title = element_text(size = 18),
# Customize appearance of legend title
legend.text = element_text(size = 18),
# Customize plot title
plot.title = element_text(hjust = 0.5, size = 24, color = 'black'),
# Customize appearance of x-axis text
axis.text.x = element_blank(),
# Customize appearance of y-axis text
axis.text.y = element_blank(),
# Customize axis ticks appearance
axis.ticks = element_blank(),
# Set plot background to transparent with no border
plot.background = element_rect(fill = "transparent", colour = NA),
# Customize the background of the panel (plot area)
panel.background = element_rect(fill = 'white'),
# Customize panel border
panel.border = element_rect(colour = "black", fill=NA, size = 0.5),
# Remove major gridlines
panel.grid.major = element_blank(),
# Remove minor gridlines
panel.grid.minor = element_blank()
)
plot(p)
# Save plot as JPEG
ggsave(filename = file.path(output_dir, paste0("network_RT_Window_", window, ".jpeg")), plot = p, width = 30, height = 20)
}
openxlsx::saveWorkbook(wb, output_xlsx, overwrite = TRUE)
}
net_viz(df_mz_differences_filtered)
p <- ggraph(g, layout = best_layout) +
geom_edge_link(aes(color = factor(edge_color)), alpha = 0.8) +
geom_node_point(size = 6, color = "black") +
geom_node_text(aes(label = name), repel = TRUE) +
scale_edge_color_brewer(palette = "Dark2") +
ggtitle(plot_title)+
labs(edge_color = "Molecular Group") +
theme(
# Set legend background to transparent with no border
legend.background = element_rect(fill = "transparent", colour = NA),
# Customize appearance of legend title
legend.title = element_text(size = 20),
# Customize appearance of legend title
legend.text = element_text(size = 18),
# Customize plot title
plot.title = element_text(hjust = 0.5, size = 28, color = 'black'),
# Customize appearance of x-axis text
axis.text.x = element_blank(),
# Customize appearance of y-axis text
axis.text.y = element_blank(),
# Customize axis ticks appearance
axis.ticks = element_blank(),
# Set plot background to transparent with no border
plot.background = element_rect(fill = "transparent", colour = NA),
# Customize the background of the panel (plot area)
panel.background = element_rect(fill = 'white'),
# Customize panel border
panel.border = element_rect(colour = "black", fill=NA, size = 0.75),
# Remove major gridlines
panel.grid.major = element_blank(),
# Remove minor gridlines
panel.grid.minor = element_blank()
)
#' library(ggraph)
#' sample_data <- data.frame(
#'   Window = rep(1:3, each = 5),
#'   mz1 = runif(15, 100, 500),
#'   mz2 = runif(15, 100, 500),
#'   molecule_match = sample(c("A", "B", "C"), 15, replace = TRUE)
#' )
#' net_viz(sample_data)
#'
#' @export
net_viz <- function(data, output_xlsx = "network_data.xlsx", output_dir = "network_plots") {
dir.create(output_dir, showWarnings = FALSE)
wb <- createWorkbook()
unique_windows <- unique(data$Window)
for (window in unique_windows) {
window_data <- filter(data, Window == window)
# Save network data to Excel
addWorksheet(wb, paste0("RT_Window_", window))
writeData(wb, sheet = paste0("RT_Window_", window), window_data)
# Prepare data for graph
graph_data <- data.frame(from = round(window_data$mz1, 0), to = round(window_data$mz2, 0), edge_color = window_data$molecule_match)
g <- graph_from_data_frame(graph_data, directed = TRUE)
# Optimize layout for each window
best_layout <- optimize_network_layout(g)
plot_title <- paste("Network for RT Window", window)
p <- ggraph(g, layout = best_layout) +
geom_edge_link(aes(color = factor(edge_color)), alpha = 0.8) +
geom_node_point(size = 6, color = "black") +
geom_node_text(aes(label = name), repel = TRUE) +
scale_edge_color_brewer(palette = "Dark2") +
ggtitle(plot_title)+
labs(edge_color = "Molecular Group") +
theme(
# Set legend background to transparent with no border
legend.background = element_rect(fill = "transparent", colour = NA),
# Customize appearance of legend title
legend.title = element_text(size = 20),
# Customize appearance of legend title
legend.text = element_text(size = 18),
# Customize plot title
plot.title = element_text(hjust = 0.5, size = 28, color = 'black'),
# Customize appearance of x-axis text
axis.text.x = element_blank(),
# Customize appearance of y-axis text
axis.text.y = element_blank(),
# Customize axis ticks appearance
axis.ticks = element_blank(),
# Set plot background to transparent with no border
plot.background = element_rect(fill = "transparent", colour = NA),
# Customize the background of the panel (plot area)
panel.background = element_rect(fill = 'white'),
# Customize panel border
panel.border = element_rect(colour = "black", fill=NA, size = 0.75),
# Remove major gridlines
panel.grid.major = element_blank(),
# Remove minor gridlines
panel.grid.minor = element_blank()
)
plot(p)
# Save plot as JPEG
ggsave(filename = file.path(output_dir, paste0("network_RT_Window_", window, ".jpeg")), plot = p, width = 30, height = 20)
}
openxlsx::saveWorkbook(wb, output_xlsx, overwrite = TRUE)
}
net_viz(df_mz_differences_filtered)
library(available)
install.packages("available")
library(available)
available("MetLipNet")
install.packages(c("devtools", "roxygen2", "testthat", "knitr"))
library(devtools)
usethis::create_project("C:/Users/lacroixis/Documents/GitHub/Untargeted-Metabolomics-Network-Analysis/MetLipNet")
#' library(ggraph)
#' sample_data <- data.frame(
#'   Window = rep(1:3, each = 5),
#'   mz1 = runif(15, 100, 500),
#'   mz2 = runif(15, 100, 500),
#'   molecule_match = sample(c("A", "B", "C"), 15, replace = TRUE)
#' )
#' net_viz(sample_data)
#'
#' @export
net_viz <- function(data, image_format = ".jpeg", output_xlsx = "network_data.xlsx", output_dir = "network_plots") {
dir.create(output_dir, showWarnings = FALSE)
wb <- createWorkbook()
unique_windows <- unique(data$Window)
for (window in unique_windows) {
window_data <- filter(data, Window == window)
# Save network data to Excel
addWorksheet(wb, paste0("RT_Window_", window))
writeData(wb, sheet = paste0("RT_Window_", window), window_data)
# Prepare data for graph
graph_data <- data.frame(from = round(window_data$mz1, 0), to = round(window_data$mz2, 0), edge_color = window_data$molecule_match)
g <- graph_from_data_frame(graph_data, directed = TRUE)
# Optimize layout for each window
best_layout <- optimize_network_layout(g)
plot_title <- paste("Network for RT Window", window)
p <- ggraph(g, layout = best_layout) +
geom_edge_link(aes(color = factor(edge_color)), alpha = 0.8) +
geom_node_point(size = 6, color = "black") +
geom_node_text(aes(label = name), repel = TRUE) +
scale_edge_color_brewer(palette = "Dark2") +
ggtitle(plot_title)+
labs(edge_color = "Molecular Group") +
theme(
# Set legend background to transparent with no border
legend.background = element_rect(fill = "transparent", colour = NA),
# Customize appearance of legend title
legend.title = element_text(size = 20),
# Customize appearance of legend title
legend.text = element_text(size = 18),
# Customize plot title
plot.title = element_text(hjust = 0.5, size = 28, color = 'black'),
# Customize appearance of x-axis text
axis.text.x = element_blank(),
# Customize appearance of y-axis text
axis.text.y = element_blank(),
# Customize axis ticks appearance
axis.ticks = element_blank(),
# Set plot background to transparent with no border
plot.background = element_rect(fill = "transparent", colour = NA),
# Customize the background of the panel (plot area)
panel.background = element_rect(fill = 'white'),
# Customize panel border
panel.border = element_rect(colour = "black", fill=NA, size = 0.75),
# Remove major gridlines
panel.grid.major = element_blank(),
# Remove minor gridlines
panel.grid.minor = element_blank()
)
plot(p)
# Save plot as JPEG
ggsave(filename = file.path(output_dir, paste0("network_RT_Window_", window, image_format)), plot = p, width = 30, height = 20)
}
openxlsx::saveWorkbook(wb, output_xlsx, overwrite = TRUE)
}
net_viz(df_mz_differences_filtered, image_format = ".svg")
library(openxlsx)
library(igraph)
library(ggraph)
library(openxlsx)
library(dplyr)
library(future)
library(furrr)
library(RColorBrewer)
# Generate example data
df <- data.frame(
RT = runif(1000, min = 0.026, max = 13.9),
mz = rnorm(1000, mean = 200, sd = 50) + rnorm(1000, mean = 0, sd = 10) * runif(1000, min = 0.5, max = 1.5)
)
# Apply categorization function with adjusted window overlap
df_categorized <- categorize_by_rt_window(df, overlap = 0.5)
# Display first 3 rows per RT window
df_categorized %>%
group_by(Window) %>%
slice_head(n = 3) %>%
print()
# Apply function to calculate m/z differences and match to pre-determined chemical groups
df_mz_differences_filtered <- calculate_mz_differences(df_categorized, selected_groups = c("17", "14", "28"))
head(df_mz_differences_filtered)
net_viz(df_mz_differences_filtered, image_format = ".svg")
install.packages(c("devtools", "roxygen2", "testthat", "knitr", "usethis"))
#### Install Our MetLip Custom Package ####
devtools::install_github("IDSS-NIAID/MetLipNet")
#### Open Required Libraries ####
library(MetLipNet)
setwd("~/GitHub/Untargeted-Metabolomics-Network-Analysis")
roxygen2::roxygenise()
roxygen2::roxygenise()
roxygen2::roxygenise()
#### Install Our MetLip Custom Package ####
devtools::install_github("IDSS-NIAID/MetLipNet")
#### Install Our MetLip Custom Package ####
detach("package:MetLipNet", unload = TRUE)
devtools::install_github("IDSS-NIAID/MetLipNet")
#### Open Required Libraries ####
library(MetLipNet)
#### Open Required Libraries ####
library(MetLipNet)
#### Open Required Libraries ####
library(MetLipNet)
# Simulate example data
df <- data.frame(
RT = runif(1000, min = 0.026, max = 13.9),
mz = rnorm(1000, mean = 200, sd = 50) + rnorm(1000, mean = 0, sd = 10) * runif(1000, min = 0.5, max = 1.5)
)
# Apply categorization function with adjusted window overlap
df_categorized <- categorize_by_rt_window(df, overlap = 0.5)
# Display first 3 rows per RT window
df_categorized %>%
group_by(Window) %>%
slice_head(n = 3) %>%
print()
#### Open Required Libraries ####
library(MetLipNet)
library(igraph)
library(ggraph)
library(openxlsx)
library(dplyr)
library(future)
library(furrr)
library(RColorBrewer)
# Simulate example data
df <- data.frame(
RT = runif(1000, min = 0.026, max = 13.9),
mz = rnorm(1000, mean = 200, sd = 50) + rnorm(1000, mean = 0, sd = 10) * runif(1000, min = 0.5, max = 1.5)
)
# Apply categorization function with adjusted window overlap
df_categorized <- categorize_by_rt_window(df, overlap = 0.5)
# Display first 3 rows per RT window
df_categorized %>%
group_by(Window) %>%
slice_head(n = 3) %>%
print()
# Apply function to calculate m/z differences and match to pre-determined chemical groups
df_mz_differences_filtered <- calculate_mz_differences(df_categorized, selected_groups = c("17", "14", "28"))
# Display first few rows
head(df_mz_differences_filtered)
# Apply function to optimize layout and save network images
net_viz(df_mz_differences_filtered, image_format = ".svg")
